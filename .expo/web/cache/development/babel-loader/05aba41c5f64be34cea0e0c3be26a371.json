{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport axios from \"axios\";\nexport var apiRepository = function () {\n  function apiRepository() {\n    _classCallCheck(this, apiRepository);\n\n    this.url = \"http://3.14.51.76/\";\n  }\n\n  _createClass(apiRepository, [{\n    key: \"getTest\",\n    value: function getTest() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        console.log(\"Establishing Connection\");\n        axios.get(\"\" + _this.url, _this.config).then(function (x) {\n          return resolve(x.data);\n        }).catch(function (x) {\n          return alert(x);\n        });\n      });\n    }\n  }, {\n    key: \"registerUser\",\n    value: function registerUser(body) {\n      var _this2 = this;\n\n      console.log(\"Registering User... API Call\");\n      return new Promise(function (resolve, reject) {\n        axios.post(_this2.url + \"createAccount\", body).then(function (resp) {\n          return resolve(resp.data);\n        }).catch(function (resp) {\n          return alert(resp);\n        });\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login(info) {\n      var _this3 = this;\n\n      console.log(\"Logging in User... API Call\");\n      return new Promise(function (resolve, reject) {\n        axios.post(_this3.url + \"login\", info).then(function (resp) {\n          return resolve(resp.data);\n        }).catch(function (resp) {\n          return alert(resp);\n        });\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this4 = this;\n\n      console.log(\"Logging Out... API Call\");\n      return new Promise(function (resolve, reject) {\n        axios.post(_this4.url + \"logout\", _this4.config).then(function (resp) {\n          return resolve(resp.data);\n        }).catch(function (resp) {\n          return alert(resp);\n        });\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      var _this5 = this;\n\n      console.log(\"Deleting Account... API Call\");\n      return new Promise(function (resolve, reject) {\n        axios.post(_this5.url + \"deleteAccount\", _this5.config).then(function (resp) {\n          return resolve(resp.data);\n        }).catch(function (resp) {\n          return alert(resp);\n        });\n      });\n    }\n  }]);\n\n  return apiRepository;\n}();","map":{"version":3,"sources":["/Users/sarahkaiser/Desktop/NEWFront/api/apiRepository.js"],"names":["axios","apiRepository","url","Promise","resolve","reject","console","log","get","config","then","x","data","catch","alert","body","post","resp","info"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,WAAaC,aAAb;AAAA;AAAA;;AAAA,SAEIC,GAFJ,GAEU,oBAFV;AAAA;;AAAA;AAAA;AAAA,8BAKc;AAAA;;AACN,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAP,QAAAA,KAAK,CAACQ,GAAN,MAAa,KAAI,CAACN,GAAlB,EAAyB,KAAI,CAACO,MAA9B,EACKC,IADL,CACU,UAAAC,CAAC;AAAA,iBAAIP,OAAO,CAACO,CAAC,CAACC,IAAH,CAAX;AAAA,SADX,EAEKC,KAFL,CAEW,UAAAF,CAAC;AAAA,iBAAIG,KAAK,CAACH,CAAD,CAAT;AAAA,SAFZ;AAGH,OALM,CAAP;AAMH;AAZL;AAAA;AAAA,iCAciBI,IAdjB,EAcuB;AAAA;;AACfT,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,aAAO,IAAIJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,QAAAA,KAAK,CAACgB,IAAN,CAAc,MAAI,CAACd,GAAnB,oBAAuCa,IAAvC,EACCL,IADD,CACM,UAAAO,IAAI;AAAA,iBAAIb,OAAO,CAACa,IAAI,CAACL,IAAN,CAAX;AAAA,SADV,EAECC,KAFD,CAEO,UAAAI,IAAI;AAAA,iBAAIH,KAAK,CAACG,IAAD,CAAT;AAAA,SAFX;AAGH,OAJM,CAAP;AAKH;AArBL;AAAA;AAAA,0BAuBUC,IAvBV,EAuBgB;AAAA;;AACRZ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,aAAO,IAAIJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,QAAAA,KAAK,CAACgB,IAAN,CAAc,MAAI,CAACd,GAAnB,YAA+BgB,IAA/B,EACCR,IADD,CACM,UAAAO,IAAI;AAAA,iBAAIb,OAAO,CAACa,IAAI,CAACL,IAAN,CAAX;AAAA,SADV,EAECC,KAFD,CAEO,UAAAI,IAAI;AAAA,iBAAIH,KAAK,CAACG,IAAD,CAAT;AAAA,SAFX;AAGH,OAJM,CAAP;AAKH;AA9BL;AAAA;AAAA,6BAgCa;AAAA;;AACLX,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,aAAO,IAAIJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,QAAAA,KAAK,CAACgB,IAAN,CAAc,MAAI,CAACd,GAAnB,aAAgC,MAAI,CAACO,MAArC,EACCC,IADD,CACM,UAAAO,IAAI;AAAA,iBAAIb,OAAO,CAACa,IAAI,CAACL,IAAN,CAAX;AAAA,SADV,EAECC,KAFD,CAEO,UAAAI,IAAI;AAAA,iBAAIH,KAAK,CAACG,IAAD,CAAT;AAAA,SAFX;AAGH,OAJM,CAAP;AAKH;AAvCL;AAAA;AAAA,8BAyCa;AAAA;;AACLX,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,aAAO,IAAIJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCL,QAAAA,KAAK,CAACgB,IAAN,CAAc,MAAI,CAACd,GAAnB,oBAAuC,MAAI,CAACO,MAA5C,EACCC,IADD,CACM,UAAAO,IAAI;AAAA,iBAAIb,OAAO,CAACa,IAAI,CAACL,IAAN,CAAX;AAAA,SADV,EAECC,KAFD,CAEO,UAAAI,IAAI;AAAA,iBAAIH,KAAK,CAACG,IAAD,CAAT;AAAA,SAFX;AAGH,OAJM,CAAP;AAKH;AAhDL;;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\n\nexport class apiRepository {\n    //url = \"http://localhost:3003\";\n    url = \"http://3.14.51.76/\";\n\n\n    getTest() {\n        return new Promise((resolve, reject) => {\n            console.log(\"Establishing Connection\");\n            axios.get(`${this.url}`, this.config )\n                .then(x => resolve(x.data))\n                .catch(x => alert(x));\n        });\n    }\n\n    registerUser(body) {\n        console.log(\"Registering User... API Call\");\n        return new Promise((resolve, reject) => {\n            axios.post(`${this.url}createAccount`, body)\n            .then(resp => resolve(resp.data))\n            .catch(resp => alert(resp));\n        });\n    }\n\n    login(info) {\n        console.log(\"Logging in User... API Call\");\n        return new Promise((resolve, reject) => {\n            axios.post(`${this.url}login`, info)\n            .then(resp => resolve(resp.data))\n            .catch(resp => alert(resp));\n        });\n    }\n\n    logout() {\n        console.log(\"Logging Out... API Call\");\n        return new Promise((resolve, reject) => {\n            axios.post(`${this.url}logout`, this.config)\n            .then(resp => resolve(resp.data))\n            .catch(resp => alert(resp));\n        });\n    }\n\n    delete() {\n        console.log(\"Deleting Account... API Call\");\n        return new Promise((resolve, reject) => {\n            axios.post(`${this.url}deleteAccount`, this.config)\n            .then(resp => resolve(resp.data))\n            .catch(resp => alert(resp));\n        });\n    }\n\n\n    \n//     getUser(userId) {\n//         return new Promise((resolve, reject) => {\n//             axios.get(`${this.url}/user-profile/${userId}`, this.config)\n//                 .then(x => resolve(x.data))\n//                 .catch(x => alert(x));\n//         });\n//     }\n\n//     getSearchSitter(date, user_id) {\n//         console.log(\"Searching for Sitters... API Call\");\n//         return new Promise((resolve, reject) => {\n//             axios.get(`${this.url}/search/sitters/${user_id}/${date}`, this.config)\n//                 .then(x => resolve(x.data))\n//                 .catch(x => alert(x))\n//         });\n//     }\n\n//     getSearchJob(date, user_id) {\n//         console.log(\"Searching for Jobs... API Call\");\n//         return new Promise((resolve, reject) => {\n//             axios.get(`${this.url}/search/jobs/${user_id}/${date}`, this.config)\n//                 .then(x => resolve(x.data))\n//                 .catch(x => alert(x))\n//         });\n//     }\n\n//     loginUser(email, password) {\n//         console.log(\"Login User... API Call\");\n//         return new Promise((resolve, reject) => {\n//         axios\n//           .post(`${this.url}/signin`, email, password)\n//         .then(resp => resolve(resp.data))\n//         .catch(resp => alert(resp));\n//         });\n//     }\n\n//     registerUser(email, password) {\n//         console.log(\"Register User... API Call\");\n//         return new Promise((resolve, reject) => {\n//         axios\n//           .post(`${this.url}/signup`, email, password)\n//         .then(resp => resolve(resp.data))\n//         .catch(resp => alert(resp));\n//         });\n//     }\n\n//     setAvailability(userId, availability) {\n//         console.log(\"set availability... API Call\");\n//         return new Promise((resolve, reject) => {\n//             axios.post(`${this.url}/user/${userId}/availability`, availability)\n//             .then(resp => resolve(resp.data))\n//             .catch(resp => alert(resp));\n//         });\n//     }\n\n\n\n//   updateUser(userID, user) {\n//       console.log(\"Updating User... API Call\");\n//       return new Promise((resolve, reject) => {\n//             axios.post(`${this.url}/user/${userID}/info2`, user)\n//             .then(x => resolve(x.data))\n//             .catch(x => alert(x));\n//       });\n//   }\n\n//   addChild(userID, child) {\n//     console.log(\"Adding child... API Call\");\n//     return new Promise((resolve, reject) => {\n//           axios.post(`${this.url}/user/${userID}/child`, child)\n//           .then(x => resolve(x.data))\n//           .catch(x => alert(x));\n//     });\n// }\n\n\n//   getRatings(userID) {\n//       console.log(\"Fetching Ratings... API Call\");\n//       return new Promise((resolve, rejct) => {\n//           axios.get(`${this.url}/allratings/${userID}`, this.config)\n//           .then(x => resolve(x.data))\n//           .catch(x => alert(x));\n//       });\n//   }\n\n//   getParentBookings(userID) {\n//     console.log(\"Fetching parent bookings... API Call\");\n//     return new Promise((resolve, rejct) => {\n//         axios.get(`${this.url}/parentbookings/${userID}`)\n//         .then(x => resolve(x.data))\n//         .catch(x => alert(x));\n//     });\n// }\n\n// getSitterBookings(userID) {\n//     console.log(\"Fetching sitter bookings... API Call\");\n//     return new Promise((resolve, rejct) => {\n//         axios.get(`${this.url}/sitterbookings/${userID}`)\n//         .then(x => resolve(x.data))\n//         .catch(x => alert(x));\n//     });\n// }\n\n//     getApplicants(booking_id) {\n//         console.log(\"Fetching applicants... API Call\");\n//         return new Promise((resolve, rejct) => {\n//             axios.get(`${this.url}/applications/${booking_id}`)\n//             .then(x => resolve(x.data))\n//             .catch(x => alert(x));\n//         });\n//     }\n\n//   getBooking(userID) {\n//       console.log(\"Fetching Bookings... API Call\");\n//       return new Promise((resolve, reject) => {\n//           axios.get(`${this.url}/bookings/${userID}`, this.config)\n//           .then(x => resolve(x.data))\n//           .catch(x => alert(x));\n//       });\n//   }\n  \n//   updateUserRating(user_Id, rated_id, is_child, rating, comment){\n//     console.log(\"Updating rating... API Call\");\n//     console.log(rated_id, is_child, rating, comment);\n//     let id = user_Id;\n//     return new Promise((resolve, reject) => {\n//         axios.post(`${this.url}/${id}/rate`, rated_id, 0, 5, \"comment\")\n//         .then(x => resolve(x.data))\n//         .catch(x => alert(x));\n//     });\n//   }\n    \n//     blockUser(blocked_id, blocker_id) {\n//         console.log(\"Block user... API Call\")\n//         console.log(typeof blocker_id, typeof blocker_id);\n//         return new Promise((resolve, reject) =>{\n//             axios.post(`${this.url}/${blocker_id}/block`, blocked_id, this.config)\n//             .then(x => resolve(x.data))\n//             .catch(x => alert(x));\n//         });\n//     }\n\n//     bookingRequest() {\n//         console.log(\"Booking... API Call\")\n//     }\n}\n"]},"metadata":{},"sourceType":"module"}
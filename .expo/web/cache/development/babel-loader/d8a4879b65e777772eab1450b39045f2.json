{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sarahkaiser/Desktop/NEWFront/app/Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { apiRepository } from \"../api/apiRepository\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nvar Register = function (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  var _super = _createSuper(Register);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.apiRepository = new apiRepository();\n    _this.state = {\n      email: '',\n      username: '',\n      password: '',\n      fname: '',\n      lname: '',\n      pass_confirm: '',\n      fname: '',\n      lname: ''\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      console.log(this.state);\n\n      if (this.state.password != this.state.pass_confirm) {\n        window.alert(\"Oops! you're passwords don't match!\");\n      } else if (this.state.email == \"\" || this.state.username == \"\" || this.state.password == \"\" || this.state.fname == \"\" || this.state.lname == \"\") {\n        window.alert(\"Please fill out all fields\");\n      } else {\n        this.apiRepository.registerUser(this.state).then(function (rep) {\n          if (rep === \"OK\") {\n            console.log('Great Success!');\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.otherStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, \"Register\"), React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, \"Email\"), React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        style: styles.inputStyle,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            email: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"UserName\"), React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        style: styles.inputStyle,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            username: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, \"Password\"), React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        style: styles.inputStyle,\n        secureTextEntry: true,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            password: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 18\n        }\n      }, \"Confirm Password\"), React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        secureTextEntry: true,\n        style: styles.inputStyle,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            pass_confirm: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, \"First Name\"), React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        style: styles.inputStyle,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            fname: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \"Last Name\"), React.createElement(TextInput, {\n        autoCapitalize: \"none\",\n        style: styles.inputStyle,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            lname: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        title: \"Register\",\n        style: styles.buttonStyle,\n        onClick: function onClick() {\n          return _this2.onSubmit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }\n      }, React.createElement(Text, {\n        style: styles.appButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 18\n        }\n      }, \"Register\")), React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, \"Already have an account?\"), React.createElement(TouchableOpacity, {\n        title: \"Login\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Login');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.router,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, \"Login\")));\n      _;\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  inputStyle: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 3,\n    marginHorizontal: 60,\n    borderRadius: 5\n  },\n  appButtonText: {\n    fontSize: 18,\n    fontFamily: 'Cochin',\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  buttonStyle: {\n    backgroundColor: \"#859a9b\",\n    borderRadius: 10,\n    marginHorizontal: 80,\n    padding: 2,\n    margin: 4\n  },\n  textStyle: {\n    marginHorizontal: 60,\n    fontSize: 20,\n    fontFamily: 'Cochin'\n  },\n  otherStyle: {\n    marginVertical: 80,\n    flex: 4\n  },\n  router: {\n    marginHorizontal: 170,\n    fontSize: 30,\n    fontFamily: 'Cochin',\n    color: \"white\"\n  }\n});\nexport default Register;","map":{"version":3,"sources":["/Users/sarahkaiser/Desktop/NEWFront/app/Register.js"],"names":["React","apiRepository","NavigationContainer","createStackNavigator","Register","state","email","username","password","fname","lname","pass_confirm","console","log","window","alert","registerUser","then","rep","styles","otherStyle","textStyle","inputStyle","e","setState","target","value","buttonStyle","onSubmit","appButtonText","props","navigation","navigate","router","_","Component","StyleSheet","create","height","borderColor","borderWidth","marginHorizontal","borderRadius","fontSize","fontFamily","color","fontWeight","alignSelf","textTransform","backgroundColor","padding","margin","marginVertical","flex"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { StyleSheet, Button, View, SafeAreaView, TouchableOpacity, Text, TextInput, Alert } from 'react-native';\nimport { apiRepository} from '../api/apiRepository';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nclass Register extends React.Component{\n\n    apiRepository = new apiRepository();\n\n    state={\n        email:'',\n        username: '',\n        password:'',\n        fname:'',\n        lname:'',\n        pass_confirm:'',\n        fname:'',\n        lname:'',\n    };\n\n    onSubmit(){\n        console.log(this.state);\n\n        if(this.state.password!=this.state.pass_confirm){\n            window.alert(\"Oops! you're passwords don't match!\");\n        }\n        else if(this.state.email  == \"\" || this.state.username  == \"\" || this.state.password == \"\" || this.state.fname == \"\"|| this.state.lname == \"\"){\n            window.alert(\"Please fill out all fields\");\n        }\n        else {\n            this.apiRepository.registerUser(this.state)\n                .then(rep => {\n                    if(rep === \"OK\"){\n                        console.log('Great Success!');\n                    }\n                })\n        }\n\n\n\n    }\n    render() {\n        return (\n            <View style={styles.otherStyle}>\n                <Text style={styles.textStyle}>\n                    Register\n                </Text>\n                <Text style={styles.textStyle}>Email</Text>\n                <TextInput\n                    autoCapitalize=\"none\"\n                    style={styles.inputStyle}\n                    onChange={ e => this.setState({ email: e.target.value })}\n                />\n\n                <Text style={styles.textStyle}>UserName</Text>\n\n                <TextInput\n                    autoCapitalize=\"none\"\n                    style={styles.inputStyle}\n                    onChange={ e => this.setState({ username: e.target.value })}\n\n                />\n                <Text style={styles.textStyle}>Password</Text>\n                <TextInput\n                    autoCapitalize=\"none\"\n                    style={styles.inputStyle}\n                    secureTextEntry={true}\n                    onChange={ e => this.setState({ password: e.target.value })}\n                />\n                 <Text style={styles.textStyle}>Confirm Password</Text>\n                <TextInput\n                    autoCapitalize=\"none\"\n                    secureTextEntry={true}\n                    style={styles.inputStyle}\n                    onChange={ e => this.setState({ pass_confirm: e.target.value })}\n                />\n\n                <Text style={styles.textStyle}>First Name</Text>\n                <TextInput\n                    autoCapitalize=\"none\"\n                    style={styles.inputStyle}\n                    onChange={ e => this.setState({ fname: e.target.value })}\n                />\n                <Text style={styles.textStyle}>Last Name</Text>\n                <TextInput\n                    autoCapitalize=\"none\"\n                    style={styles.inputStyle}\n                    onChange={ e => this.setState({ lname: e.target.value })}\n                />\n\n                 <TouchableOpacity title=\"Register\" style={styles.buttonStyle} onClick={()=>this.onSubmit()}>\n\n                 <Text style={styles.appButtonText}>Register</Text>\n                </TouchableOpacity>\n\n                <Text style={styles.textStyle}>Already have an account?</Text>\n                <TouchableOpacity title=\"Login\" onPress={()=>this.props.navigation.navigate('Login')}>\n                    <Text style={styles.router}>Login</Text>\n                    </TouchableOpacity>\n            </View>\n        );_\n    }\n}\nconst styles = StyleSheet.create({\n    inputStyle:{\n        height: 40, \n        borderColor: 'gray', \n        borderWidth: 3,\n        marginHorizontal:60,\n        borderRadius:5,\n    },\n\n    appButtonText: {\n        fontSize: 18,\n        fontFamily:'Cochin',\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        alignSelf: \"center\",\n        textTransform: \"uppercase\",\n\n      },\n\n    buttonStyle:{\n            backgroundColor:\"#859a9b\",\n            borderRadius:10, \n            marginHorizontal:80,           \n            padding:2,\n            margin:4,\n    },\n    textStyle: {\n        marginHorizontal:60,\n      fontSize: 20,\n      fontFamily:'Cochin',\n    },\n    otherStyle: {\n        marginVertical:80,\n        flex:4,\n      //backgroundColor: \"#859a9b\",\n     \n    },\n    router:{\n        marginHorizontal:170,\n        fontSize: 30,\n        fontFamily:'Cochin',\n        color:\"white\",\n\n    },\n  });\n\nexport default Register; \n"]},"metadata":{},"sourceType":"module"}